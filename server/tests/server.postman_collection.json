{
	"info": {
		"_postman_id": "e452767a-13b3-40d9-a057-c84a22b25e6b",
		"name": "server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15823420"
	},
	"item": [
		{
			"name": "Users Controller Test",
			"item": [
				{
					"name": "Sign up  profile 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response =  pm.response.json();\r",
									"var profileId = response.userCreated._id;\r",
									"pm.environment.set(\"profileID_1\", profileId)\r",
									"\r",
									"\r",
									"pm.test(\"Correct status code\",\r",
									"    function(){\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct user response\", function () {\r",
									"    pm.expect(response.userCreated.username).to.eql(\"HarryPotter\");\r",
									"//    pm.expect(jsonData.userCreated.password).to.eql(\"Hogwarts123\"); - it hash now\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"HarryPotter\",\r\n    \"password\":\"Hogwarts123\"\r\n}"
						},
						"url": {
							"raw": "{{host}}/api/profiles/singup",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"profiles",
								"singup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login profile 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response =  pm.response.json();\r",
									"var token = response.token;\r",
									"pm.environment.set(\"token_p1\", token)\r",
									"\r",
									"\r",
									"pm.test(\"Correct status code\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.collectionVariables.get(\"variable_key\");\r",
									"pm.test(\"Correct login response\", function () {\r",
									"      pm.expect(response.message).to.eql(\"Authentication successful\"); \r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\":\"HarryPotter\",\r\n    \"password\":\"Hogwarts123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/profiles/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"profiles",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign up  profile 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData =  pm.response.json();\r",
									"var profileId = jsonData.userCreated._id;\r",
									"pm.environment.set(\"profileID_2\", profileId)\r",
									"\r",
									"\r",
									"pm.test(\"Correct status code\",\r",
									"    function(){\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Correct user response\", function () {\r",
									"    var jsonData = pm.response.json(); // parse to json\r",
									"    pm.expect(jsonData.userCreated.username).to.eql(\"RonWeasley\");\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\":\"RonWeasley\",\r\n    \"password\":\"Hogwarts321\"\r\n}"
						},
						"url": {
							"raw": "{{host}}/api/profiles/singup",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"profiles",
								"singup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login profile 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response =  pm.response.json();\r",
									"var token = response.token;\r",
									"pm.environment.set(\"token_p2\", token)\r",
									"\r",
									"\r",
									"pm.test(\"Correct status code\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.collectionVariables.get(\"variable_key\");\r",
									"pm.test(\"Correct login response\", function () {\r",
									"      pm.expect(response.message).to.eql(\"Authentication successful\"); \r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"RonWeasley\",\r\n    \"password\":\"Hogwarts321\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/profiles/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"profiles",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Expect- Username already",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Correct status code\",function(){\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct  error response\", function () {\r",
									"    var jsonData = pm.response.json(); // parse to json\r",
									"      pm.expect(jsonData.message).to.eql(\"Username already exists\"); \r",
									"});      "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"HarryPotter\",\r\n    \"password\":\"Toppen1\"\r\n}"
						},
						"url": {
							"raw": "{{host}}/api/profiles/singup",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"profiles",
								"singup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login- Wrong password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response =  pm.response.json();\r",
									"\r",
									"\r",
									"pm.test(\"Correct status code\", function(){\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.collectionVariables.get(\"variable_key\");\r",
									"pm.test(\"Correct login response\", function () {\r",
									"      pm.expect(response.message).to.eql(\"Authentication failed\"); \r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"HarryPotter\",\r\n    \"password\":\"Hogwarts1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/profiles/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"profiles",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login- Wrong username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response =  pm.response.json();\r",
									"\r",
									"\r",
									"pm.test(\"Correct status code\", function(){\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.collectionVariables.get(\"variable_key\");\r",
									"pm.test(\"Correct login response\", function () {\r",
									"      pm.expect(response.message).to.eql(\"Authentication failed\"); \r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"HarryPotterA\",\r\n    \"password\":\"Hogwarts123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/profiles/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"profiles",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all -  2 profiles",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json(); \r",
									"var users = response.users;\r",
									"\r",
									"pm.test(\"Correct status code\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('Number of user = ' + users.length, function () {\r",
									"    pm.expect(users.length).to.eql(2);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/profiles",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get profile 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json(); \r",
									"\r",
									"pm.test(\"Correct status code\",\r",
									"    function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct user response\", function () {\r",
									"    pm.expect(response.user.username).to.eql(\"HarryPotter\");\r",
									"//    pm.expect(jsonData.userCreated.password).to.eql(\"Hogwarts123\"); - it hash now\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_p1}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/profiles/:profileId",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"profiles",
								":profileId"
							],
							"variable": [
								{
									"key": "profileId",
									"value": "{{profileID_1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change profile 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();\r",
									"var token = response.token;\r",
									"pm.environment.set(\"token_p1\", token)\r",
									"\r",
									"pm.test(\"Correct status code\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct profile response\", function () {\r",
									"     pm.expect(response.updatedUser.username).to.eql(\"HarryPotter1\");\r",
									"    \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_p1}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"HarryPotter1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/profiles/:profileId",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"profiles",
								":profileId"
							],
							"variable": [
								{
									"key": "profileId",
									"value": "{{profileID_1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "check update profile 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json(); \r",
									"\r",
									"pm.test(\"Correct status code\",\r",
									"    function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct updated user response\", function () {\r",
									"    pm.expect(response.user.username).to.eql(\"HarryPotter1\");\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_p1}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/profiles/:profileId",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"profiles",
								":profileId"
							],
							"variable": [
								{
									"key": "profileId",
									"value": "{{profileID_1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get profile 1- auth failed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Correct status code\", function(){\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct error response\", function () {\r",
									"    var jsonData = pm.response.json(); // parse to json\r",
									"    pm.expect(jsonData.message).to.eql(\"Authentication failed\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/profiles/:profileId",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"profiles",
								":profileId"
							],
							"variable": [
								{
									"key": "profileId",
									"value": "{{profileID_1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all -  2 profiles Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json(); \r",
									"var users = response.users;\r",
									"\r",
									"pm.test(\"Correct status code\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('Number of user = ' + users.length, function () {\r",
									"    pm.expect(users.length).to.eql(2);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/profiles",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Username already exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();\r",
									"\r",
									"pm.test(\"Correct status code\",function(){\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct profile response\", function () {\r",
									"    pm.expect(response.message).to.eql(\"Username already exists\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_p1}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"HarryPotter1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/profiles/:profileId",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"profiles",
								":profileId"
							],
							"variable": [
								{
									"key": "profileId",
									"value": "{{profileID_1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete profile 1- auth failed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Correct status code\", function(){\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct delete message\"), function(){\r",
									"      var jsonData = pm.response.json(); // parse to json\r",
									"    pm.expect(jsonData.message).to.eql(\"Authentication failed\");\r",
									"\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/profiles/:profileId",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"profiles",
								":profileId"
							],
							"variable": [
								{
									"key": "profileId",
									"value": "{{profileID_1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete profile 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json(); \r",
									"\r",
									"pm.test(\"Correct status code\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct delete message\"), function(){\r",
									"\r",
									"    pm.expect(response.message).to.eql(\"The profile has been deleted\");\r",
									"    pm.expect(response.deletedUSer.username).to.eql(\"HarryPotter1\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_p1}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/profiles/:profileId",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"profiles",
								":profileId"
							],
							"variable": [
								{
									"key": "profileId",
									"value": "{{profileID_1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete profile 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json(); \r",
									"\r",
									"pm.test(\"Correct status code\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct delete message\"), function(){\r",
									"\r",
									"    pm.expect(response.message).to.eql(\"The profile has been deleted\");\r",
									"    pm.expect(response.deletedUSer.username).to.eql(\"RonWeasley\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_p2}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/profiles/:profileId",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"profiles",
								":profileId"
							],
							"variable": [
								{
									"key": "profileId",
									"value": "{{profileID_2}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "http://localhost:3000",
			"type": "string"
		}
	]
}